name: Release PyPI, installers and docker container

on:
  push:
    tags: "v*"

jobs:
  release_pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
          cache-dependency-path: pyproject.toml
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          make build
          twine upload dist/*
  release_environment:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - name: Install dependencies
        run: |
          pip install .
          pip freeze > requirements.txt
      - name: Publish Latest Draft
        run: |
          gh release edit ${{ github.ref_name }} --draft=false
          gh release upload ${{ github.ref_name }} requirements.txt --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
